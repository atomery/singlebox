name: macOS

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
    paths-ignore:
      - 'catalog/**'
      - 'docs/**'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/macos.yml'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get juli version
      run: echo ::set-env name=JULI_VERSION::$(cat juli-version $1)
    - uses: actions/checkout@v2
      with:
        repository: 'atomery/juli'
        ref: v${{ env.JULI_VERSION }}
        path: 'juli'
        fetch-depth: 1
        submodules: false
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache yarn cache
      uses: actions/cache@v2
      id: cache-yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Get tag name
      run: echo ::set-env name=CI_BUILD_TAG::${GITHUB_REF/refs\/tags\//}
      if: startsWith(github.ref, 'refs/tags/')
    - name: Build Singlebox
      run: |
        cd juli
        yarn --prefer-offline --network-timeout 600000
        yarn lint
        yarn singlebox:dist
      env:
        CI: true
        CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        CSC_LINK: ${{ secrets.CSC_LINK }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REACT_APP_LICENSE_SECRET: ${{ secrets.REACT_APP_LICENSE_SECRET }}